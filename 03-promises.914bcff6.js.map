{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAkBtCH,EAAKC,KAAKM,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBAEN,IAAMC,EAAaC,OAAOX,EAAKI,WAAWQ,OACpCC,EAAYF,OAAOX,EAAKK,UAAUO,OAClCE,EAAcH,OAAOX,EAAKM,YAAYM,OAExCG,EAAU,EACVC,EAAW,EACXC,EAAQP,EAERQ,EAAUC,aAAY,WA1B5B,IAAuBC,EAAUC,EA2B1BN,IAAYD,IA3BIM,EA+BLJ,EA/BeK,EA+BLJ,EA9BnB,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAGtBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,KAqBAQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAEvEc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAGvEN,GAAW,EACXC,GAAY,EACZC,GAASJ,GAbPwB,cAAcnB,E,GAcfL,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delayInput: document.querySelector(\"[name='delay']\"),\n  stepInput: document.querySelector(\"[name='step']\"),\n  amountInput: document.querySelector(\"[name='amount']\")\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n\n    }, delay);\n  })\n}\n\nrefs.form.addEventListener(\"submit\", event => {\n  event.preventDefault();\n\n  const delayValue = Number(refs.delayInput.value);\n  const stepValue = Number(refs.stepInput.value);\n  const amountValue = Number(refs.amountInput.value);\n\n  let counter = 0;\n  let position = 1;\n  let delay = delayValue;\n\n  let timerId = setInterval(() => {\n    if(counter === amountValue) {\n      clearInterval(timerId);\n      return;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    counter += 1;\n    position += 1;\n    delay += stepValue;\n  }, stepValue);\n})"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","counter","position1","delay1","timerId","setInterval","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval"],"version":3,"file":"03-promises.914bcff6.js.map"}